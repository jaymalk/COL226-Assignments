# 8 "a2.mll"
 
  open A3
  exception Not_implemented
  exception Bad_State

# 8 "a2.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\226\255\227\255\228\255\079\000\098\000\192\000\020\001\
    \232\255\233\255\234\255\001\000\000\000\000\000\001\000\001\000\
    \011\000\000\000\002\000\244\255\245\255\246\255\000\000\248\255\
    \249\255\013\000\001\000\252\255\253\255\254\255\002\000\006\000\
    \001\000\251\255\001\000\018\000\250\255\243\255\006\000\247\255\
    \022\000\242\255\007\000\241\255\240\255\239\255\238\255\023\000\
    \015\000\237\255\023\000\038\000\236\255\235\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\027\000\026\000\025\000\024\000\
    \255\255\255\255\255\255\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\255\255\255\255\255\255\029\000\255\255\
    \255\255\029\000\029\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\000\000\000\000\255\255\000\000\
    \000\000\255\255\255\255\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\000\000\255\255\000\000\000\000\000\000\000\000\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\030\000\030\000\030\000\030\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \030\000\000\000\030\000\000\000\024\000\000\000\000\000\000\000\
    \029\000\028\000\019\000\021\000\027\000\020\000\000\000\015\000\
    \003\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\044\000\000\000\008\000\010\000\009\000\000\000\
    \000\000\005\000\005\000\005\000\005\000\005\000\006\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\007\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\000\000\016\000\045\000\000\000\000\000\
    \000\000\022\000\038\000\000\000\025\000\012\000\011\000\046\000\
    \047\000\014\000\053\000\033\000\050\000\018\000\017\000\042\000\
    \026\000\040\000\035\000\031\000\013\000\032\000\034\000\037\000\
    \036\000\039\000\041\000\043\000\048\000\049\000\023\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\005\000\051\000\052\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \000\000\005\000\000\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\005\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\000\000\000\000\000\000\000\000\005\000\
    \000\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\000\000\005\000\000\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\030\000\030\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\030\000\255\255\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\016\000\255\255\000\000\000\000\000\000\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\015\000\255\255\255\255\
    \255\255\000\000\022\000\255\255\000\000\000\000\000\000\014\000\
    \013\000\000\000\011\000\032\000\012\000\000\000\000\000\017\000\
    \000\000\018\000\025\000\026\000\000\000\031\000\025\000\034\000\
    \035\000\038\000\040\000\042\000\047\000\048\000\000\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\005\000\050\000\051\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\255\255\255\255\255\255\
    \255\255\005\000\255\255\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\006\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\255\255\255\255\255\255\255\255\006\000\
    \255\255\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\007\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\255\255\
    \255\255\255\255\255\255\007\000\255\255\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec read lexbuf =
   __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 25 "a2.mll"
                        ( read lexbuf  (* Ignoring white space. *))
# 191 "a2.ml"

  | 1 ->
# 27 "a2.mll"
                        ( LP        (* Left Parathesis *))
# 196 "a2.ml"

  | 2 ->
# 28 "a2.mll"
                        ( RP        (* Right Parathesis *))
# 201 "a2.ml"

  | 3 ->
# 30 "a2.mll"
                        ( COMMA     (* Seperator for N-Tuples *))
# 206 "a2.ml"

  | 4 ->
# 31 "a2.mll"
                        ( PROJ      (* Projector Syntax for N-Tuples *))
# 211 "a2.ml"

  | 5 ->
# 33 "a2.mll"
                        ( DEF       (* Definitional Keyword *))
# 216 "a2.ml"

  | 6 ->
# 35 "a2.mll"
                        ( DELIMITER (* Command Delimiter *))
# 221 "a2.ml"

  | 7 ->
# 37 "a2.mll"
                        ( TILDA     (* Unary Minus *))
# 226 "a2.ml"

  | 8 ->
# 38 "a2.mll"
                        ( ABS       (* Absolute Value *))
# 231 "a2.ml"

  | 9 ->
# 40 "a2.mll"
                        ( PLUS )
# 236 "a2.ml"

  | 10 ->
# 41 "a2.mll"
                        ( MINUS )
# 241 "a2.ml"

  | 11 ->
# 42 "a2.mll"
                        ( TIMES     (* Binary Arithmetic Operation Keywords *))
# 246 "a2.ml"

  | 12 ->
# 43 "a2.mll"
                        ( DIV )
# 251 "a2.ml"

  | 13 ->
# 44 "a2.mll"
                        ( REM )
# 256 "a2.ml"

  | 14 ->
# 46 "a2.mll"
                        ( NOT       (* Logical Negation *))
# 261 "a2.ml"

  | 15 ->
# 48 "a2.mll"
                        ( DISJ      (* Binary Boolean Operation Keywords *))
# 266 "a2.ml"

  | 16 ->
# 49 "a2.mll"
                        ( CONJ )
# 271 "a2.ml"

  | 17 ->
# 51 "a2.mll"
                        ( IF )
# 276 "a2.ml"

  | 18 ->
# 52 "a2.mll"
                        ( THEN      (* Conditional Statement Keywords *))
# 281 "a2.ml"

  | 19 ->
# 53 "a2.mll"
                        ( ELSE )
# 286 "a2.ml"

  | 20 ->
# 54 "a2.mll"
                        ( FI )
# 291 "a2.ml"

  | 21 ->
# 56 "a2.mll"
                        ( EQ )
# 296 "a2.ml"

  | 22 ->
# 57 "a2.mll"
                        ( GT        (* Comparison Keywords *))
# 301 "a2.ml"

  | 23 ->
# 58 "a2.mll"
                        ( LT )
# 306 "a2.ml"

  | 24 ->
# 60 "a2.mll"
                        ( BOOL(true) )
# 311 "a2.ml"

  | 25 ->
# 61 "a2.mll"
                        ( BOOL(false)  (* Boolean constants *))
# 316 "a2.ml"

  | 26 ->
let
# 63 "a2.mll"
          i
# 322 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 63 "a2.mll"
                        ( ID (i)      (* Variable IDs *))
# 326 "a2.ml"

  | 27 ->
let
# 66 "a2.mll"
             i
# 332 "a2.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 66 "a2.mll"
                        ((INT(int_of_string i)) (* INTEGER TYPE *))
# 336 "a2.ml"

  | 28 ->
# 68 "a2.mll"
                        ( EOF          (* End of file marker *))
# 341 "a2.ml"

  | 29 ->
# 70 "a2.mll"
                        ( raise Bad_State)
# 346 "a2.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

